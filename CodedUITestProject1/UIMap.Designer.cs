// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CreateNewPasswort - Use 'CreateNewPasswortParams' to pass parameters into this method.
        /// </summary>
        public void CreateNewPasswort()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uINeuButton = this.UIMainWindowWindow.UINeuButton;
            WpfEdit uIZielsystemEdit = this.UIMainWindowWindow.UIItemCustom.UIZielsystemEdit;
            WpfEdit uILoginEdit = this.UIMainWindowWindow.UIItemCustom.UILoginEdit;
            WpfComboBox uIKategorieComboBox = this.UIMainWindowWindow.UIItemCustom.UIKategorieComboBox;
            WpfDatePicker uIAblaufdatumDatePicker = this.UIMainWindowWindow.UIItemCustom.UIAblaufdatumDatePicker;
            WpfEdit uINew_passwortEdit = this.UIMainWindowWindow.UIItemCustom.UINew_passwortEdit;
            WpfEdit uIRepeat_passwordEdit = this.UIMainWindowWindow.UIItemCustom.UIRepeat_passwordEdit;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIItemCustom.UISpeichernButton;
            WpfButton uIKategorie1Button = this.UIMainWindowWindow.UIKategorie1Button;
            WpfText uIWwwgooglechText = this.UIMainWindowWindow.UIItemCustom1.UIPasswoerterTable.UIItem24Row.UIWwwgooglechCell.UIWwwgooglechText;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(53, 12));

            // Click 'Neu' button
            Mouse.Click(uINeuButton, new Point(55, 8));

            // Type 'www.google.ch' in 'zielsystem' text box
            uIZielsystemEdit.Text = this.CreateNewPasswortParams.UIZielsystemEditText;

            // Type '{Tab}' in 'zielsystem' text box
            Keyboard.SendKeys(uIZielsystemEdit, this.CreateNewPasswortParams.UIZielsystemEditSendKeys, ModifierKeys.None);

            // Type 'benaja' in 'login' text box
            uILoginEdit.Text = this.CreateNewPasswortParams.UILoginEditText;

            // Type 'Alt, Control + 2' in 'login' text box
            Keyboard.SendKeys(uILoginEdit, this.CreateNewPasswortParams.UILoginEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'benaja@gmail.com' in 'login' text box
            uILoginEdit.Text = this.CreateNewPasswortParams.UILoginEditText1;

            // Select 'Kategorie 1' in 'kategorie' combo box
            uIKategorieComboBox.SelectedItem = this.CreateNewPasswortParams.UIKategorieComboBoxSelectedItem;

            // Select '07-Jun-2018' in 'ablaufdatum' date picker
            uIAblaufdatumDatePicker.DateAsString = this.CreateNewPasswortParams.UIAblaufdatumDatePickerDateAsString;

            // Click 'new_passwort' text box
            Mouse.Click(uINew_passwortEdit, new Point(14, 10));

            // Type '********' in 'new_passwort' text box
            Keyboard.SendKeys(uINew_passwortEdit, this.CreateNewPasswortParams.UINew_passwortEditSendKeys, true);

            // Type '********' in 'repeat_password' text box
            Keyboard.SendKeys(uIRepeat_passwordEdit, this.CreateNewPasswortParams.UIRepeat_passwordEditSendKeys, true);

            // Click 'Speichern' button
            Mouse.Click(uISpeichernButton, new Point(41, 5));

            // Click 'Kategorie 1' button
            Mouse.Click(uIKategorie1Button, new Point(147, 17));

            // Click 'www.google.ch' label
            Mouse.Click(uIWwwgooglechText, new Point(124, 8));
        }
        
        #region Properties
        public virtual CreateNewPasswortParams CreateNewPasswortParams
        {
            get
            {
                if ((this.mCreateNewPasswortParams == null))
                {
                    this.mCreateNewPasswortParams = new CreateNewPasswortParams();
                }
                return this.mCreateNewPasswortParams;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private CreateNewPasswortParams mCreateNewPasswortParams;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateNewPasswort'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CreateNewPasswortParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'www.google.ch' in 'zielsystem' text box
        /// </summary>
        public string UIZielsystemEditText = "www.google.ch";
        
        /// <summary>
        /// Type '{Tab}' in 'zielsystem' text box
        /// </summary>
        public string UIZielsystemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'benaja' in 'login' text box
        /// </summary>
        public string UILoginEditText = "benaja";
        
        /// <summary>
        /// Type 'Alt, Control + 2' in 'login' text box
        /// </summary>
        public string UILoginEditSendKeys = "2";
        
        /// <summary>
        /// Type 'benaja@gmail.com' in 'login' text box
        /// </summary>
        public string UILoginEditText1 = "benaja@gmail.com";
        
        /// <summary>
        /// Select 'Kategorie 1' in 'kategorie' combo box
        /// </summary>
        public string UIKategorieComboBoxSelectedItem = "Kategorie 1";
        
        /// <summary>
        /// Select '07-Jun-2018' in 'ablaufdatum' date picker
        /// </summary>
        public string UIAblaufdatumDatePickerDateAsString = "07-Jun-2018";
        
        /// <summary>
        /// Type '********' in 'new_passwort' text box
        /// </summary>
        public string UINew_passwortEditSendKeys = "e3QkkbzyPweBgvn4lNh68+NlZAxTPu91tx2rTN+GB7mtZri0rcm9vg==";
        
        /// <summary>
        /// Type '********' in 'repeat_password' text box
        /// </summary>
        public string UIRepeat_passwordEditSendKeys = "e3QkkbzyPweBgvn4lNh688jt+M1cMBf01jSeYc2glhJEvGceQxXRxw==";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Elementansicht";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIM120ProjektexeListItem UIM120ProjektexeListItem
        {
            get
            {
                if ((this.mUIM120ProjektexeListItem == null))
                {
                    this.mUIM120ProjektexeListItem = new UIM120ProjektexeListItem(this);
                }
                return this.mUIM120ProjektexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIM120ProjektexeListItem mUIM120ProjektexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIM120ProjektexeListItem : WinListItem
    {
        
        public UIM120ProjektexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "M120Projekt.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UINeuButton
        {
            get
            {
                if ((this.mUINeuButton == null))
                {
                    this.mUINeuButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUINeuButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "new_button";
                    this.mUINeuButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUINeuButton;
            }
        }
        
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        
        public WpfButton UIKategorie1Button
        {
            get
            {
                if ((this.mUIKategorie1Button == null))
                {
                    this.mUIKategorie1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIKategorie1Button.SearchProperties[WpfButton.PropertyNames.Name] = "Kategorie 1";
                    this.mUIKategorie1Button.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIKategorie1Button;
            }
        }
        
        public UIItemCustom1 UIItemCustom1
        {
            get
            {
                if ((this.mUIItemCustom1 == null))
                {
                    this.mUIItemCustom1 = new UIItemCustom1(this);
                }
                return this.mUIItemCustom1;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUINeuButton;
        
        private UIItemCustom mUIItemCustom;
        
        private WpfButton mUIKategorie1Button;
        
        private UIItemCustom1 mUIItemCustom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIZielsystemEdit
        {
            get
            {
                if ((this.mUIZielsystemEdit == null))
                {
                    this.mUIZielsystemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIZielsystemEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "zielsystem";
                    this.mUIZielsystemEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIZielsystemEdit;
            }
        }
        
        public WpfEdit UILoginEdit
        {
            get
            {
                if ((this.mUILoginEdit == null))
                {
                    this.mUILoginEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUILoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "login";
                    this.mUILoginEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUILoginEdit;
            }
        }
        
        public WpfComboBox UIKategorieComboBox
        {
            get
            {
                if ((this.mUIKategorieComboBox == null))
                {
                    this.mUIKategorieComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIKategorieComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "kategorie";
                    this.mUIKategorieComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIKategorieComboBox;
            }
        }
        
        public WpfDatePicker UIAblaufdatumDatePicker
        {
            get
            {
                if ((this.mUIAblaufdatumDatePicker == null))
                {
                    this.mUIAblaufdatumDatePicker = new WpfDatePicker(this);
                    #region Search Criteria
                    this.mUIAblaufdatumDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "ablaufdatum";
                    this.mUIAblaufdatumDatePicker.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAblaufdatumDatePicker;
            }
        }
        
        public WpfEdit UINew_passwortEdit
        {
            get
            {
                if ((this.mUINew_passwortEdit == null))
                {
                    this.mUINew_passwortEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINew_passwortEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "new_passwort";
                    this.mUINew_passwortEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUINew_passwortEdit;
            }
        }
        
        public WpfEdit UIRepeat_passwordEdit
        {
            get
            {
                if ((this.mUIRepeat_passwordEdit == null))
                {
                    this.mUIRepeat_passwordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIRepeat_passwordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "repeat_password";
                    this.mUIRepeat_passwordEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIRepeat_passwordEdit;
            }
        }
        
        public WpfButton UISpeichernButton
        {
            get
            {
                if ((this.mUISpeichernButton == null))
                {
                    this.mUISpeichernButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISpeichernButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "save_button";
                    this.mUISpeichernButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISpeichernButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIZielsystemEdit;
        
        private WpfEdit mUILoginEdit;
        
        private WpfComboBox mUIKategorieComboBox;
        
        private WpfDatePicker mUIAblaufdatumDatePicker;
        
        private WpfEdit mUINew_passwortEdit;
        
        private WpfEdit mUIRepeat_passwordEdit;
        
        private WpfButton mUISpeichernButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom1 : WpfCustom
    {
        
        public UIItemCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Kategorie";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIPasswoerterTable UIPasswoerterTable
        {
            get
            {
                if ((this.mUIPasswoerterTable == null))
                {
                    this.mUIPasswoerterTable = new UIPasswoerterTable(this);
                }
                return this.mUIPasswoerterTable;
            }
        }
        #endregion
        
        #region Fields
        private UIPasswoerterTable mUIPasswoerterTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPasswoerterTable : WpfTable
    {
        
        public UIPasswoerterTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "passwoerter";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem24Row UIItem24Row
        {
            get
            {
                if ((this.mUIItem24Row == null))
                {
                    this.mUIItem24Row = new UIItem24Row(this);
                }
                return this.mUIItem24Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem24Row mUIItem24Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem24Row : WpfRow
    {
        
        public UIItem24Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "24";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIWwwgooglechCell UIWwwgooglechCell
        {
            get
            {
                if ((this.mUIWwwgooglechCell == null))
                {
                    this.mUIWwwgooglechCell = new UIWwwgooglechCell(this);
                }
                return this.mUIWwwgooglechCell;
            }
        }
        #endregion
        
        #region Fields
        private UIWwwgooglechCell mUIWwwgooglechCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWwwgooglechCell : WpfCell
    {
        
        public UIWwwgooglechCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Zielsystem";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIWwwgooglechText
        {
            get
            {
                if ((this.mUIWwwgooglechText == null))
                {
                    this.mUIWwwgooglechText = new WpfText(this);
                    #region Search Criteria
                    this.mUIWwwgooglechText.SearchProperties[WpfText.PropertyNames.Name] = "www.google.ch";
                    this.mUIWwwgooglechText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIWwwgooglechText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIWwwgooglechText;
        #endregion
    }
}
