// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ErstelleKategorie - Use 'ErstelleKategorieParams' to pass parameters into this method.
        /// </summary>
        public void ErstelleKategorie()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uINeuButton = this.UIMainWindowWindow.UINeuButton;
            WpfButton uIKategorieerstellenButton = this.UIMainWindowWindow.UIKategorieerstellenButton;
            WpfEdit uINameEdit1 = this.UIMainWindowWindow.UIItemCustom.UINameEdit;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIItemCustom.UISpeichernButton;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(46, 7));

            // Click 'Neu' button
            Mouse.Click(uINeuButton, new Point(46, 10));

            // Click 'Kategorie erstellen' button
            Mouse.Click(uIKategorieerstellenButton, new Point(110, 18));

            // Type 'Webseiten' in 'name' text box
            uINameEdit1.Text = this.ErstelleKategorieParams.UINameEditText;

            // Click 'Speichern' button
            Mouse.Click(uISpeichernButton, new Point(25, 18));
        }
        
        /// <summary>
        /// ErstellePasswort - Use 'ErstellePasswortParams' to pass parameters into this method.
        /// </summary>
        public void ErstellePasswort()
        {
            #region Variable Declarations
            WpfButton uINeuButton = this.UIMainWindowWindow.UINeuButton;
            WpfEdit uIZielsystemEdit = this.UIMainWindowWindow.UIItemCustom1.UIZielsystemEdit;
            WpfCustom uIItemCustom2 = this.UIMainWindowWindow.UIItemCustom2;
            WpfEdit uILoginEdit = this.UIMainWindowWindow.UIItemCustom3.UILoginEdit;
            WpfEdit uILoginEdit1 = this.UIMainWindowWindow.UIItemCustom4.UILoginEdit;
            WpfEdit uILoginEdit2 = this.UIMainWindowWindow.UIItemCustom5.UILoginEdit;
            WpfComboBox uIKategorieComboBox = this.UIMainWindowWindow.UIItemCustom6.UIKategorieComboBox;
            WpfDatePicker uIAblaufdatumDatePicker = this.UIMainWindowWindow.UIItemCustom7.UIAblaufdatumDatePicker;
            WpfEdit uINew_passwortEdit = this.UIMainWindowWindow.UIItemCustom8.UINew_passwortEdit;
            WpfEdit uINew_passwortEdit1 = this.UIMainWindowWindow.UIItemCustom9.UINew_passwortEdit;
            WpfEdit uIRepeat_passwordEdit = this.UIMainWindowWindow.UIItemCustom10.UIRepeat_passwordEdit;
            WpfEdit uIRepeat_passwordEdit1 = this.UIMainWindowWindow.UIItemCustom11.UIRepeat_passwordEdit;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIItemCustom12.UISpeichernButton;
            WpfButton uIWebseitenButton = this.UIMainWindowWindow.UIWebseitenButton;
            WpfText uIWwwgooglechText = this.UIMainWindowWindow.UIItemCustom13.UIPasswoerterTable.UIItem1Row.UIWwwgooglechCell.UIWwwgooglechText;
            WpfButton uIPasswortanzeigenButton = this.UIMainWindowWindow.UIItemCustom2.UIPasswortanzeigenButton;
            WinButton uIJAButton = this.UIInformationWindow.UIJAWindow.UIJAButton;
            #endregion

            // Click 'Neu' button
            Mouse.Click(uINeuButton, new Point(56, 17));

            // Type 'www.google.ch' in 'zielsystem' text box
            uIZielsystemEdit.Text = this.ErstellePasswortParams.UIZielsystemEditText;

            // Click custom control
            Mouse.Click(uIItemCustom2, new Point(155, 89));

            // Type 'benaja' in 'login' text box
            uILoginEdit.Text = this.ErstellePasswortParams.UILoginEditText;

            // Type 'Alt, Control + 2' in 'login' text box
            Keyboard.SendKeys(uILoginEdit1, this.ErstellePasswortParams.UILoginEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'benaja@gmail.com' in 'login' text box
            uILoginEdit2.Text = this.ErstellePasswortParams.UILoginEditText1;

            // Select 'Webseiten' in 'kategorie' combo box
            uIKategorieComboBox.SelectedItem = this.ErstellePasswortParams.UIKategorieComboBoxSelectedItem;

            // Select '14-Jun-2018' in 'ablaufdatum' date picker
            uIAblaufdatumDatePicker.DateAsString = this.ErstellePasswortParams.UIAblaufdatumDatePickerDateAsString;

            // Click 'new_passwort' text box
            Mouse.Click(uINew_passwortEdit, new Point(24, 15));

            // Type '********' in 'new_passwort' text box
            Keyboard.SendKeys(uINew_passwortEdit1, this.ErstellePasswortParams.UINew_passwortEditSendKeys, true);

            // Click 'repeat_password' text box
            Mouse.Click(uIRepeat_passwordEdit, new Point(28, 8));

            // Type '********' in 'repeat_password' text box
            Keyboard.SendKeys(uIRepeat_passwordEdit1, this.ErstellePasswortParams.UIRepeat_passwordEditSendKeys, true);

            // Click 'Speichern' button
            Mouse.Click(uISpeichernButton, new Point(20, 19));

            // Click 'Webseiten' button
            Mouse.Click(uIWebseitenButton, new Point(94, 13));

            // Click 'www.google.ch' label
            Mouse.Click(uIWwwgooglechText, new Point(76, 10));

            // Click 'Passwort anzeigen' button
            Mouse.Click(uIPasswortanzeigenButton, new Point(71, 13));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(38, 15));
        }
        
        /// <summary>
        /// PrueffePasswort - Use 'PrueffePasswortExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PrueffePasswort()
        {
            #region Variable Declarations
            WinText uIIhrPasswortlautetgibText = this.UIPasswortWindow.UIIhrPasswortlautetgibWindow.UIIhrPasswortlautetgibText;
            #endregion

            // Verify that the 'Name' property of 'Ihr Passwort lautet: gibbiX12345' label equals 'Ihr Passwort lautet: gibbiX12345'
            Assert.AreEqual(this.PrueffePasswortExpectedValues.UIIhrPasswortlautetgibTextName, uIIhrPasswortlautetgibText.Name);
        }
        
        /// <summary>
        /// EditPasswort - Use 'EditPasswortParams' to pass parameters into this method.
        /// </summary>
        public void EditPasswort()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIPasswortWindow.UIOKWindow.UIOKButton;
            WpfButton uIWebseitenButton = this.UIMainWindowWindow.UIWebseitenButton;
            WpfText uIWwwgooglechText = this.UIMainWindowWindow.UIItemCustom13.UIPasswoerterTable.UIItem1Row.UIWwwgooglechCell.UIWwwgooglechText;
            WpfButton uIPasswortändernButton = this.UIMainWindowWindow.UIItemCustom1.UIPasswortändernButton;
            WinButton uIJAButton = this.UIInformationWindow.UIJAWindow.UIJAButton;
            WpfEdit uINew_passwortEdit = this.UIMainWindowWindow.UIItemCustom1.UINew_passwortEdit;
            WpfEdit uIRepeat_passwordEdit = this.UIMainWindowWindow.UIItemCustom1.UIRepeat_passwordEdit;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIItemCustom1.UISpeichernButton;
            WpfText uIWwwgooglechText1 = this.UIMainWindowWindow.UIItemCustom21.UIPasswoerterTable.UIItem1Row.UIWwwgooglechCell.UIWwwgooglechText;
            WpfButton uIPasswortanzeigenButton = this.UIMainWindowWindow.UIItemCustom2.UIPasswortanzeigenButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(38, 8));

            // Click 'Webseiten' button
            Mouse.Click(uIWebseitenButton, new Point(156, 9));

            // Click 'www.google.ch' label
            Mouse.Click(uIWwwgooglechText, new Point(135, 9));

            // Click 'Passwort ändern' button
            Mouse.Click(uIPasswortändernButton, new Point(37, 16));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(62, 12));

            // Click 'new_passwort' text box
            Mouse.Click(uINew_passwortEdit, new Point(19, 18));

            // Type '********' in 'new_passwort' text box
            Keyboard.SendKeys(uINew_passwortEdit, this.EditPasswortParams.UINew_passwortEditSendKeys, true);

            // Click 'repeat_password' text box
            Mouse.Click(uIRepeat_passwordEdit, new Point(16, 8));

            // Type '********' in 'repeat_password' text box
            Keyboard.SendKeys(uIRepeat_passwordEdit, this.EditPasswortParams.UIRepeat_passwordEditSendKeys, true);

            // Click 'Speichern' button
            Mouse.Click(uISpeichernButton, new Point(30, 8));

            // Click 'Webseiten' button
            Mouse.Click(uIWebseitenButton, new Point(118, 15));

            // Click 'www.google.ch' label
            Mouse.Click(uIWwwgooglechText1, new Point(79, 6));

            // Click 'Passwort anzeigen' button
            Mouse.Click(uIPasswortanzeigenButton, new Point(89, 18));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(35, 5));
        }
        
        /// <summary>
        /// PrueffePasswortNachEdit - Use 'PrueffePasswortNachEditExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PrueffePasswortNachEdit()
        {
            #region Variable Declarations
            WinText uIIhrPasswortlautetgibText1 = this.UIPasswortWindow.UIIhrPasswortlautetgibWindow.UIIhrPasswortlautetgibText1;
            #endregion

            // Verify that the 'Name' property of 'Ihr Passwort lautet: gibbiX' label equals 'Ihr Passwort lautet: gibbiX'
            Assert.AreEqual(this.PrueffePasswortNachEditExpectedValues.UIIhrPasswortlautetgibText1Name, uIIhrPasswortlautetgibText1.Name);
        }
        
        /// <summary>
        /// SucheNachNichtVorhandenem - Use 'SucheNachNichtVorhandenemParams' to pass parameters into this method.
        /// </summary>
        public void SucheNachNichtVorhandenem()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIPasswortWindow.UIOKWindow.UIOKButton;
            WpfEdit uISearch_textboxEdit = this.UIMainWindowWindow.UISearch_textboxEdit;
            WpfButton uISuchenButton = this.UIMainWindowWindow.UISuchenButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(41, 12));

            // Type 'sdf' in 'search_textbox' text box
            uISearch_textboxEdit.Text = this.SucheNachNichtVorhandenemParams.UISearch_textboxEditText;

            // Click 'Suchen' button
            Mouse.Click(uISuchenButton, new Point(26, 20));
        }
        
        /// <summary>
        /// ErgebnisNachNichtVorhandenem - Use 'ErgebnisNachNichtVorhandenemExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ErgebnisNachNichtVorhandenem()
        {
            #region Variable Declarations
            WpfText uIAnzahlErgebnisse0Text1 = this.UIMainWindowWindow.UIItemCustom14.UIAnzahlErgebnisse0Text.UIAnzahlErgebnisse0Text1;
            #endregion

            // Verify that the 'Name' property of 'Anzahl Ergebnisse: 0' label equals 'Anzahl Ergebnisse: 0'
            Assert.AreEqual(this.ErgebnisNachNichtVorhandenemExpectedValues.UIAnzahlErgebnisse0Text1Name, uIAnzahlErgebnisse0Text1.Name);
        }
        
        #region Properties
        public virtual ErstelleKategorieParams ErstelleKategorieParams
        {
            get
            {
                if ((this.mErstelleKategorieParams == null))
                {
                    this.mErstelleKategorieParams = new ErstelleKategorieParams();
                }
                return this.mErstelleKategorieParams;
            }
        }
        
        public virtual ErstellePasswortParams ErstellePasswortParams
        {
            get
            {
                if ((this.mErstellePasswortParams == null))
                {
                    this.mErstellePasswortParams = new ErstellePasswortParams();
                }
                return this.mErstellePasswortParams;
            }
        }
        
        public virtual PrueffePasswortExpectedValues PrueffePasswortExpectedValues
        {
            get
            {
                if ((this.mPrueffePasswortExpectedValues == null))
                {
                    this.mPrueffePasswortExpectedValues = new PrueffePasswortExpectedValues();
                }
                return this.mPrueffePasswortExpectedValues;
            }
        }
        
        public virtual EditPasswortParams EditPasswortParams
        {
            get
            {
                if ((this.mEditPasswortParams == null))
                {
                    this.mEditPasswortParams = new EditPasswortParams();
                }
                return this.mEditPasswortParams;
            }
        }
        
        public virtual PrueffePasswortNachEditExpectedValues PrueffePasswortNachEditExpectedValues
        {
            get
            {
                if ((this.mPrueffePasswortNachEditExpectedValues == null))
                {
                    this.mPrueffePasswortNachEditExpectedValues = new PrueffePasswortNachEditExpectedValues();
                }
                return this.mPrueffePasswortNachEditExpectedValues;
            }
        }
        
        public virtual SucheNachNichtVorhandenemParams SucheNachNichtVorhandenemParams
        {
            get
            {
                if ((this.mSucheNachNichtVorhandenemParams == null))
                {
                    this.mSucheNachNichtVorhandenemParams = new SucheNachNichtVorhandenemParams();
                }
                return this.mSucheNachNichtVorhandenemParams;
            }
        }
        
        public virtual ErgebnisNachNichtVorhandenemExpectedValues ErgebnisNachNichtVorhandenemExpectedValues
        {
            get
            {
                if ((this.mErgebnisNachNichtVorhandenemExpectedValues == null))
                {
                    this.mErgebnisNachNichtVorhandenemExpectedValues = new ErgebnisNachNichtVorhandenemExpectedValues();
                }
                return this.mErgebnisNachNichtVorhandenemExpectedValues;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIInformationWindow UIInformationWindow
        {
            get
            {
                if ((this.mUIInformationWindow == null))
                {
                    this.mUIInformationWindow = new UIInformationWindow();
                }
                return this.mUIInformationWindow;
            }
        }
        
        public UIPasswortWindow UIPasswortWindow
        {
            get
            {
                if ((this.mUIPasswortWindow == null))
                {
                    this.mUIPasswortWindow = new UIPasswortWindow();
                }
                return this.mUIPasswortWindow;
            }
        }
        #endregion
        
        #region Fields
        private ErstelleKategorieParams mErstelleKategorieParams;
        
        private ErstellePasswortParams mErstellePasswortParams;
        
        private PrueffePasswortExpectedValues mPrueffePasswortExpectedValues;
        
        private EditPasswortParams mEditPasswortParams;
        
        private PrueffePasswortNachEditExpectedValues mPrueffePasswortNachEditExpectedValues;
        
        private SucheNachNichtVorhandenemParams mSucheNachNichtVorhandenemParams;
        
        private ErgebnisNachNichtVorhandenemExpectedValues mErgebnisNachNichtVorhandenemExpectedValues;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIInformationWindow mUIInformationWindow;
        
        private UIPasswortWindow mUIPasswortWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ErstelleKategorie'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ErstelleKategorieParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Webseiten' in 'name' text box
        /// </summary>
        public string UINameEditText = "Webseiten";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ErstellePasswort'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ErstellePasswortParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'www.google.ch' in 'zielsystem' text box
        /// </summary>
        public string UIZielsystemEditText = "www.google.ch";
        
        /// <summary>
        /// Type 'benaja' in 'login' text box
        /// </summary>
        public string UILoginEditText = "benaja";
        
        /// <summary>
        /// Type 'Alt, Control + 2' in 'login' text box
        /// </summary>
        public string UILoginEditSendKeys = "2";
        
        /// <summary>
        /// Type 'benaja@gmail.com' in 'login' text box
        /// </summary>
        public string UILoginEditText1 = "benaja@gmail.com";
        
        /// <summary>
        /// Select 'Webseiten' in 'kategorie' combo box
        /// </summary>
        public string UIKategorieComboBoxSelectedItem = "Webseiten";
        
        /// <summary>
        /// Select '14-Jun-2018' in 'ablaufdatum' date picker
        /// </summary>
        public string UIAblaufdatumDatePickerDateAsString = "14-Jun-2018";
        
        /// <summary>
        /// Type '********' in 'new_passwort' text box
        /// </summary>
        public string UINew_passwortEditSendKeys = "e3QkkbzyPweBgvn4lNh688jt+M1cMBf01jSeYc2glhJEvGceQxXRxw==";
        
        /// <summary>
        /// Type '********' in 'repeat_password' text box
        /// </summary>
        public string UIRepeat_passwordEditSendKeys = "e3QkkbzyPweBgvn4lNh688jt+M1cMBf01jSeYc2glhJEvGceQxXRxw==";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PrueffePasswort'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class PrueffePasswortExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Ihr Passwort lautet: gibbiX12345' label equals 'Ihr Passwort lautet: gibbiX12345'
        /// </summary>
        public string UIIhrPasswortlautetgibTextName = "Ihr Passwort lautet: gibbiX12345";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditPasswort'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EditPasswortParams
    {
        
        #region Fields
        /// <summary>
        /// Type '********' in 'new_passwort' text box
        /// </summary>
        public string UINew_passwortEditSendKeys = "e3QkkbzyPweBgvn4lNh680e/pdlCAMrkFlratpxOMo0=";
        
        /// <summary>
        /// Type '********' in 'repeat_password' text box
        /// </summary>
        public string UIRepeat_passwordEditSendKeys = "e3QkkbzyPweBgvn4lNh680e/pdlCAMrkFlratpxOMo0=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PrueffePasswortNachEdit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class PrueffePasswortNachEditExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Ihr Passwort lautet: gibbiX' label equals 'Ihr Passwort lautet: gibbiX'
        /// </summary>
        public string UIIhrPasswortlautetgibText1Name = "Ihr Passwort lautet: gibbiX";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SucheNachNichtVorhandenem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SucheNachNichtVorhandenemParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'sdf' in 'search_textbox' text box
        /// </summary>
        public string UISearch_textboxEditText = "sdf";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ErgebnisNachNichtVorhandenem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ErgebnisNachNichtVorhandenemExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Anzahl Ergebnisse: 0' label equals 'Anzahl Ergebnisse: 0'
        /// </summary>
        public string UIAnzahlErgebnisse0Text1Name = "Anzahl Ergebnisse: 0";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Elementansicht";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIM120ProjektexeListItem UIM120ProjektexeListItem
        {
            get
            {
                if ((this.mUIM120ProjektexeListItem == null))
                {
                    this.mUIM120ProjektexeListItem = new UIM120ProjektexeListItem(this);
                }
                return this.mUIM120ProjektexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIM120ProjektexeListItem mUIM120ProjektexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIM120ProjektexeListItem : WinListItem
    {
        
        public UIM120ProjektexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "M120Projekt.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UINeuButton
        {
            get
            {
                if ((this.mUINeuButton == null))
                {
                    this.mUINeuButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUINeuButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "new_button";
                    this.mUINeuButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUINeuButton;
            }
        }
        
        public WpfButton UIKategorieerstellenButton
        {
            get
            {
                if ((this.mUIKategorieerstellenButton == null))
                {
                    this.mUIKategorieerstellenButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIKategorieerstellenButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "neue_kategorie";
                    this.mUIKategorieerstellenButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIKategorieerstellenButton;
            }
        }
        
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        
        public UIItemCustom1 UIItemCustom1
        {
            get
            {
                if ((this.mUIItemCustom1 == null))
                {
                    this.mUIItemCustom1 = new UIItemCustom1(this);
                }
                return this.mUIItemCustom1;
            }
        }
        
        public UIItemCustom2 UIItemCustom2
        {
            get
            {
                if ((this.mUIItemCustom2 == null))
                {
                    this.mUIItemCustom2 = new UIItemCustom2(this);
                }
                return this.mUIItemCustom2;
            }
        }
        
        public UIItemCustom3 UIItemCustom3
        {
            get
            {
                if ((this.mUIItemCustom3 == null))
                {
                    this.mUIItemCustom3 = new UIItemCustom3(this);
                }
                return this.mUIItemCustom3;
            }
        }
        
        public UIItemCustom4 UIItemCustom4
        {
            get
            {
                if ((this.mUIItemCustom4 == null))
                {
                    this.mUIItemCustom4 = new UIItemCustom4(this);
                }
                return this.mUIItemCustom4;
            }
        }
        
        public UIItemCustom5 UIItemCustom5
        {
            get
            {
                if ((this.mUIItemCustom5 == null))
                {
                    this.mUIItemCustom5 = new UIItemCustom5(this);
                }
                return this.mUIItemCustom5;
            }
        }
        
        public UIItemCustom6 UIItemCustom6
        {
            get
            {
                if ((this.mUIItemCustom6 == null))
                {
                    this.mUIItemCustom6 = new UIItemCustom6(this);
                }
                return this.mUIItemCustom6;
            }
        }
        
        public UIItemCustom7 UIItemCustom7
        {
            get
            {
                if ((this.mUIItemCustom7 == null))
                {
                    this.mUIItemCustom7 = new UIItemCustom7(this);
                }
                return this.mUIItemCustom7;
            }
        }
        
        public UIItemCustom8 UIItemCustom8
        {
            get
            {
                if ((this.mUIItemCustom8 == null))
                {
                    this.mUIItemCustom8 = new UIItemCustom8(this);
                }
                return this.mUIItemCustom8;
            }
        }
        
        public UIItemCustom9 UIItemCustom9
        {
            get
            {
                if ((this.mUIItemCustom9 == null))
                {
                    this.mUIItemCustom9 = new UIItemCustom9(this);
                }
                return this.mUIItemCustom9;
            }
        }
        
        public UIItemCustom10 UIItemCustom10
        {
            get
            {
                if ((this.mUIItemCustom10 == null))
                {
                    this.mUIItemCustom10 = new UIItemCustom10(this);
                }
                return this.mUIItemCustom10;
            }
        }
        
        public UIItemCustom11 UIItemCustom11
        {
            get
            {
                if ((this.mUIItemCustom11 == null))
                {
                    this.mUIItemCustom11 = new UIItemCustom11(this);
                }
                return this.mUIItemCustom11;
            }
        }
        
        public UIItemCustom12 UIItemCustom12
        {
            get
            {
                if ((this.mUIItemCustom12 == null))
                {
                    this.mUIItemCustom12 = new UIItemCustom12(this);
                }
                return this.mUIItemCustom12;
            }
        }
        
        public WpfButton UIWebseitenButton
        {
            get
            {
                if ((this.mUIWebseitenButton == null))
                {
                    this.mUIWebseitenButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIWebseitenButton.SearchProperties[WpfButton.PropertyNames.Name] = "Webseiten";
                    this.mUIWebseitenButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIWebseitenButton;
            }
        }
        
        public UIItemCustom13 UIItemCustom13
        {
            get
            {
                if ((this.mUIItemCustom13 == null))
                {
                    this.mUIItemCustom13 = new UIItemCustom13(this);
                }
                return this.mUIItemCustom13;
            }
        }
        
        public UIItemCustom21 UIItemCustom21
        {
            get
            {
                if ((this.mUIItemCustom21 == null))
                {
                    this.mUIItemCustom21 = new UIItemCustom21(this);
                }
                return this.mUIItemCustom21;
            }
        }
        
        public WpfEdit UISearch_textboxEdit
        {
            get
            {
                if ((this.mUISearch_textboxEdit == null))
                {
                    this.mUISearch_textboxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUISearch_textboxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "search_textbox";
                    this.mUISearch_textboxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISearch_textboxEdit;
            }
        }
        
        public WpfButton UISuchenButton
        {
            get
            {
                if ((this.mUISuchenButton == null))
                {
                    this.mUISuchenButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISuchenButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "search_button";
                    this.mUISuchenButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISuchenButton;
            }
        }
        
        public UIItemCustom14 UIItemCustom14
        {
            get
            {
                if ((this.mUIItemCustom14 == null))
                {
                    this.mUIItemCustom14 = new UIItemCustom14(this);
                }
                return this.mUIItemCustom14;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUINeuButton;
        
        private WpfButton mUIKategorieerstellenButton;
        
        private UIItemCustom mUIItemCustom;
        
        private UIItemCustom1 mUIItemCustom1;
        
        private UIItemCustom2 mUIItemCustom2;
        
        private UIItemCustom3 mUIItemCustom3;
        
        private UIItemCustom4 mUIItemCustom4;
        
        private UIItemCustom5 mUIItemCustom5;
        
        private UIItemCustom6 mUIItemCustom6;
        
        private UIItemCustom7 mUIItemCustom7;
        
        private UIItemCustom8 mUIItemCustom8;
        
        private UIItemCustom9 mUIItemCustom9;
        
        private UIItemCustom10 mUIItemCustom10;
        
        private UIItemCustom11 mUIItemCustom11;
        
        private UIItemCustom12 mUIItemCustom12;
        
        private WpfButton mUIWebseitenButton;
        
        private UIItemCustom13 mUIItemCustom13;
        
        private UIItemCustom21 mUIItemCustom21;
        
        private WpfEdit mUISearch_textboxEdit;
        
        private WpfButton mUISuchenButton;
        
        private UIItemCustom14 mUIItemCustom14;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.EditKategorie";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "name";
                    this.mUINameEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public WpfButton UISpeichernButton
        {
            get
            {
                if ((this.mUISpeichernButton == null))
                {
                    this.mUISpeichernButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISpeichernButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "save_button";
                    this.mUISpeichernButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISpeichernButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUINameEdit;
        
        private WpfButton mUISpeichernButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom1 : WpfCustom
    {
        
        public UIItemCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIZielsystemEdit
        {
            get
            {
                if ((this.mUIZielsystemEdit == null))
                {
                    this.mUIZielsystemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIZielsystemEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "zielsystem";
                    this.mUIZielsystemEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIZielsystemEdit;
            }
        }
        
        public WpfButton UIPasswortändernButton
        {
            get
            {
                if ((this.mUIPasswortändernButton == null))
                {
                    this.mUIPasswortändernButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPasswortändernButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "edit_password";
                    this.mUIPasswortändernButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPasswortändernButton;
            }
        }
        
        public WpfEdit UINew_passwortEdit
        {
            get
            {
                if ((this.mUINew_passwortEdit == null))
                {
                    this.mUINew_passwortEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINew_passwortEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "new_passwort";
                    this.mUINew_passwortEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUINew_passwortEdit;
            }
        }
        
        public WpfEdit UIRepeat_passwordEdit
        {
            get
            {
                if ((this.mUIRepeat_passwordEdit == null))
                {
                    this.mUIRepeat_passwordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIRepeat_passwordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "repeat_password";
                    this.mUIRepeat_passwordEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIRepeat_passwordEdit;
            }
        }
        
        public WpfButton UISpeichernButton
        {
            get
            {
                if ((this.mUISpeichernButton == null))
                {
                    this.mUISpeichernButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISpeichernButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "save_button";
                    this.mUISpeichernButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISpeichernButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIZielsystemEdit;
        
        private WpfButton mUIPasswortändernButton;
        
        private WpfEdit mUINew_passwortEdit;
        
        private WpfEdit mUIRepeat_passwordEdit;
        
        private WpfButton mUISpeichernButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom2 : WpfCustom
    {
        
        public UIItemCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIPasswortanzeigenButton
        {
            get
            {
                if ((this.mUIPasswortanzeigenButton == null))
                {
                    this.mUIPasswortanzeigenButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPasswortanzeigenButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "show_password";
                    this.mUIPasswortanzeigenButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPasswortanzeigenButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIPasswortanzeigenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom3 : WpfCustom
    {
        
        public UIItemCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UILoginEdit
        {
            get
            {
                if ((this.mUILoginEdit == null))
                {
                    this.mUILoginEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUILoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "login";
                    this.mUILoginEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUILoginEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUILoginEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom4 : WpfCustom
    {
        
        public UIItemCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UILoginEdit
        {
            get
            {
                if ((this.mUILoginEdit == null))
                {
                    this.mUILoginEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUILoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "login";
                    this.mUILoginEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUILoginEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUILoginEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom5 : WpfCustom
    {
        
        public UIItemCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UILoginEdit
        {
            get
            {
                if ((this.mUILoginEdit == null))
                {
                    this.mUILoginEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUILoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "login";
                    this.mUILoginEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUILoginEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUILoginEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom6 : WpfCustom
    {
        
        public UIItemCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfComboBox UIKategorieComboBox
        {
            get
            {
                if ((this.mUIKategorieComboBox == null))
                {
                    this.mUIKategorieComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIKategorieComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "kategorie";
                    this.mUIKategorieComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIKategorieComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mUIKategorieComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom7 : WpfCustom
    {
        
        public UIItemCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfDatePicker UIAblaufdatumDatePicker
        {
            get
            {
                if ((this.mUIAblaufdatumDatePicker == null))
                {
                    this.mUIAblaufdatumDatePicker = new WpfDatePicker(this);
                    #region Search Criteria
                    this.mUIAblaufdatumDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "ablaufdatum";
                    this.mUIAblaufdatumDatePicker.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAblaufdatumDatePicker;
            }
        }
        #endregion
        
        #region Fields
        private WpfDatePicker mUIAblaufdatumDatePicker;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom8 : WpfCustom
    {
        
        public UIItemCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UINew_passwortEdit
        {
            get
            {
                if ((this.mUINew_passwortEdit == null))
                {
                    this.mUINew_passwortEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINew_passwortEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "new_passwort";
                    this.mUINew_passwortEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUINew_passwortEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUINew_passwortEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom9 : WpfCustom
    {
        
        public UIItemCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UINew_passwortEdit
        {
            get
            {
                if ((this.mUINew_passwortEdit == null))
                {
                    this.mUINew_passwortEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINew_passwortEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "new_passwort";
                    this.mUINew_passwortEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUINew_passwortEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUINew_passwortEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom10 : WpfCustom
    {
        
        public UIItemCustom10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIRepeat_passwordEdit
        {
            get
            {
                if ((this.mUIRepeat_passwordEdit == null))
                {
                    this.mUIRepeat_passwordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIRepeat_passwordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "repeat_password";
                    this.mUIRepeat_passwordEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIRepeat_passwordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIRepeat_passwordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom11 : WpfCustom
    {
        
        public UIItemCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIRepeat_passwordEdit
        {
            get
            {
                if ((this.mUIRepeat_passwordEdit == null))
                {
                    this.mUIRepeat_passwordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIRepeat_passwordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "repeat_password";
                    this.mUIRepeat_passwordEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIRepeat_passwordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIRepeat_passwordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom12 : WpfCustom
    {
        
        public UIItemCustom12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Passwort";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UISpeichernButton
        {
            get
            {
                if ((this.mUISpeichernButton == null))
                {
                    this.mUISpeichernButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISpeichernButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "save_button";
                    this.mUISpeichernButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISpeichernButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUISpeichernButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom13 : WpfCustom
    {
        
        public UIItemCustom13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Kategorie";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIPasswoerterTable UIPasswoerterTable
        {
            get
            {
                if ((this.mUIPasswoerterTable == null))
                {
                    this.mUIPasswoerterTable = new UIPasswoerterTable(this);
                }
                return this.mUIPasswoerterTable;
            }
        }
        #endregion
        
        #region Fields
        private UIPasswoerterTable mUIPasswoerterTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPasswoerterTable : WpfTable
    {
        
        public UIPasswoerterTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "passwoerter";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem1Row UIItem1Row
        {
            get
            {
                if ((this.mUIItem1Row == null))
                {
                    this.mUIItem1Row = new UIItem1Row(this);
                }
                return this.mUIItem1Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem1Row mUIItem1Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem1Row : WpfRow
    {
        
        public UIItem1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIWwwgooglechCell UIWwwgooglechCell
        {
            get
            {
                if ((this.mUIWwwgooglechCell == null))
                {
                    this.mUIWwwgooglechCell = new UIWwwgooglechCell(this);
                }
                return this.mUIWwwgooglechCell;
            }
        }
        #endregion
        
        #region Fields
        private UIWwwgooglechCell mUIWwwgooglechCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWwwgooglechCell : WpfCell
    {
        
        public UIWwwgooglechCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Zielsystem";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIWwwgooglechText
        {
            get
            {
                if ((this.mUIWwwgooglechText == null))
                {
                    this.mUIWwwgooglechText = new WpfText(this);
                    #region Search Criteria
                    this.mUIWwwgooglechText.SearchProperties[WpfText.PropertyNames.Name] = "www.google.ch";
                    this.mUIWwwgooglechText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIWwwgooglechText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIWwwgooglechText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom21 : WpfCustom
    {
        
        public UIItemCustom21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Kategorie";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIPasswoerterTable1 UIPasswoerterTable
        {
            get
            {
                if ((this.mUIPasswoerterTable == null))
                {
                    this.mUIPasswoerterTable = new UIPasswoerterTable1(this);
                }
                return this.mUIPasswoerterTable;
            }
        }
        #endregion
        
        #region Fields
        private UIPasswoerterTable1 mUIPasswoerterTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPasswoerterTable1 : WpfTable
    {
        
        public UIPasswoerterTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "passwoerter";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem1Row1 UIItem1Row
        {
            get
            {
                if ((this.mUIItem1Row == null))
                {
                    this.mUIItem1Row = new UIItem1Row1(this);
                }
                return this.mUIItem1Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem1Row1 mUIItem1Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem1Row1 : WpfRow
    {
        
        public UIItem1Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIWwwgooglechCell1 UIWwwgooglechCell
        {
            get
            {
                if ((this.mUIWwwgooglechCell == null))
                {
                    this.mUIWwwgooglechCell = new UIWwwgooglechCell1(this);
                }
                return this.mUIWwwgooglechCell;
            }
        }
        #endregion
        
        #region Fields
        private UIWwwgooglechCell1 mUIWwwgooglechCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWwwgooglechCell1 : WpfCell
    {
        
        public UIWwwgooglechCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Zielsystem";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIWwwgooglechText
        {
            get
            {
                if ((this.mUIWwwgooglechText == null))
                {
                    this.mUIWwwgooglechText = new WpfText(this);
                    #region Search Criteria
                    this.mUIWwwgooglechText.SearchProperties[WpfText.PropertyNames.Name] = "www.google.ch";
                    this.mUIWwwgooglechText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIWwwgooglechText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIWwwgooglechText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom14 : WpfCustom
    {
        
        public UIItemCustom14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PasswortList";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIAnzahlErgebnisse0Text UIAnzahlErgebnisse0Text
        {
            get
            {
                if ((this.mUIAnzahlErgebnisse0Text == null))
                {
                    this.mUIAnzahlErgebnisse0Text = new UIAnzahlErgebnisse0Text(this);
                }
                return this.mUIAnzahlErgebnisse0Text;
            }
        }
        #endregion
        
        #region Fields
        private UIAnzahlErgebnisse0Text mUIAnzahlErgebnisse0Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAnzahlErgebnisse0Text : WpfText
    {
        
        public UIAnzahlErgebnisse0Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "anzahl_ergebnisse";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIAnzahlErgebnisse0Text1
        {
            get
            {
                if ((this.mUIAnzahlErgebnisse0Text1 == null))
                {
                    this.mUIAnzahlErgebnisse0Text1 = new WpfText(this);
                    #region Search Criteria
                    this.mUIAnzahlErgebnisse0Text1.SearchProperties[WpfText.PropertyNames.Name] = "Anzahl Ergebnisse: 0";
                    this.mUIAnzahlErgebnisse0Text1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIAnzahlErgebnisse0Text1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAnzahlErgebnisse0Text1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIAnzahlErgebnisse0Text1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIInformationWindow : WinWindow
    {
        
        public UIInformationWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Information";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Information");
            #endregion
        }
        
        #region Properties
        public UIJAWindow UIJAWindow
        {
            get
            {
                if ((this.mUIJAWindow == null))
                {
                    this.mUIJAWindow = new UIJAWindow(this);
                }
                return this.mUIJAWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIJAWindow mUIJAWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIJAWindow : WinWindow
    {
        
        public UIJAWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Information");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("Information");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPasswortWindow : WinWindow
    {
        
        public UIPasswortWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Passwort";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Passwort");
            #endregion
        }
        
        #region Properties
        public UIIhrPasswortlautetgibWindow UIIhrPasswortlautetgibWindow
        {
            get
            {
                if ((this.mUIIhrPasswortlautetgibWindow == null))
                {
                    this.mUIIhrPasswortlautetgibWindow = new UIIhrPasswortlautetgibWindow(this);
                }
                return this.mUIIhrPasswortlautetgibWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIIhrPasswortlautetgibWindow mUIIhrPasswortlautetgibWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIhrPasswortlautetgibWindow : WinWindow
    {
        
        public UIIhrPasswortlautetgibWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Passwort");
            #endregion
        }
        
        #region Properties
        public WinText UIIhrPasswortlautetgibText
        {
            get
            {
                if ((this.mUIIhrPasswortlautetgibText == null))
                {
                    this.mUIIhrPasswortlautetgibText = new WinText(this);
                    #region Search Criteria
                    this.mUIIhrPasswortlautetgibText.SearchProperties[WinText.PropertyNames.Name] = "Ihr Passwort lautet: gibbiX12345";
                    this.mUIIhrPasswortlautetgibText.WindowTitles.Add("Passwort");
                    #endregion
                }
                return this.mUIIhrPasswortlautetgibText;
            }
        }
        
        public WinText UIIhrPasswortlautetgibText1
        {
            get
            {
                if ((this.mUIIhrPasswortlautetgibText1 == null))
                {
                    this.mUIIhrPasswortlautetgibText1 = new WinText(this);
                    #region Search Criteria
                    this.mUIIhrPasswortlautetgibText1.SearchProperties[WinText.PropertyNames.Name] = "Ihr Passwort lautet: gibbiX";
                    this.mUIIhrPasswortlautetgibText1.WindowTitles.Add("Passwort");
                    #endregion
                }
                return this.mUIIhrPasswortlautetgibText1;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIIhrPasswortlautetgibText;
        
        private WinText mUIIhrPasswortlautetgibText1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Passwort");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Passwort");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
